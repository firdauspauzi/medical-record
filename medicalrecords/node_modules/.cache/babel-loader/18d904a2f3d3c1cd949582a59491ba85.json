{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Randomizer_02\\\\randomizer\\\\src\\\\components\\\\editRecord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditRecord() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    age: \"\",\n    sex: \"\",\n    contact: \"\",\n    doctorsnote: \"\",\n    records: []\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      ic: form.ic,\n      sex: form.sex,\n      contact: form.contact,\n      doctorsnote: form.doctorsnote\n    }; // This will send a post request to update the data in the database.\n\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"e.g Ali Bin Ahmad\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"ic\",\n          children: \"IC/Passport No.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"ic\",\n          value: form.ic,\n          onChange: e => updateForm({\n            ic: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"sexOptions\",\n              id: \"radioMale\",\n              value: \"Male\",\n              checked: form.sex === \"Male\",\n              onChange: e => updateForm({\n                sex: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"radioMale\",\n              className: \"form-check-label\",\n              children: \"Male\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"radio\",\n              name: \"sexOptions\",\n              id: \"radioFemale\",\n              value: \"Female\",\n              checked: form.sex === \"Female\",\n              onChange: e => updateForm({\n                sex: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"radioFemale\",\n              className: \"form-check-label\",\n              children: \"Female\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"contact\",\n          children: \"Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"form-control\",\n          id: \"contact\",\n          value: form.contact,\n          onChange: e => updateForm({\n            contact: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"notes\",\n          children: \"Doctor's Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"notes\",\n          value: form.doctorsnote,\n          onChange: e => updateForm({\n            doctorsnote: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Record\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditRecord, \"4RTFOZC8La5VaP6Hv/HU3DQcIxs=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = EditRecord;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditRecord\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Randomizer_02/randomizer/src/components/editRecord.js"],"names":["React","useState","useEffect","useParams","useNavigate","EditRecord","form","setForm","name","age","sex","contact","doctorsnote","records","params","navigate","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","ic","method","body","JSON","stringify","headers","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function EditRecord() {\n  const [form, setForm] = useState({\n    name: \"\",\n    age: \"\",\n    sex:\"\",\n    contact: \"\",\n    doctorsnote: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n \n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      ic: form.ic,\n      sex: form.sex,\n      contact: form.contact,\n      doctorsnote: form.doctorsnote,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n      <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            placeholder=\"e.g Ali Bin Ahmad\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"ic\">IC/Passport No.</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"ic\"\n            value={form.ic}\n            onChange={(e) => updateForm({ ic: e.target.value })}\n          />\n        </div>\n        \n        \n\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"sexOptions\"\n              id=\"radioMale\"\n              value=\"Male\"\n              checked={form.sex === \"Male\"}\n              onChange={(e) => updateForm({ sex: e.target.value })}\n            />\n            <label htmlFor=\"radioMale\" className=\"form-check-label\">Male</label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"sexOptions\"\n              id=\"radioFemale\"\n              value=\"Female\"\n              checked={form.sex === \"Female\"}\n              onChange={(e) => updateForm({ sex: e.target.value })}\n            />\n            <label htmlFor=\"radioFemale\" className=\"form-check-label\">Female</label>\n          </div>      \n          </div>\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"contact\">Contact</label>\n          <input\n            type=\"number\"\n            className=\"form-control\"\n            id=\"contact\"\n            value={form.contact}\n            onChange={(e) => updateForm({ contact: e.target.value })}\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label htmlFor=\"notes\">Doctor's Notes</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"notes\"\n            value={form.doctorsnote}\n            onChange={(e) => updateForm({ doctorsnote: e.target.value })}\n          />\n        </div>\n\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Add Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}