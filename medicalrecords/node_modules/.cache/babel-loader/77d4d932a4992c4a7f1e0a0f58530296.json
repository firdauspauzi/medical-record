{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Randomizer_02\\\\randomizer\\\\src\\\\components\\\\create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport DatePicker from \"react-datepicker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    age: \"\",\n    sex: \"\",\n    contact: \"\",\n    doctorsnote: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newPerson = { ...form\n    };\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newPerson)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      name: \"\",\n      age: \"\",\n      sex: \"\",\n      contact: \"\",\n      doctorsnote: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"e.g Ali Bin Ahmad\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\",\n          value: form.name,\n          onChange: e => updateForm({\n            name: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"sexMale\",\n            id: \"sexMale\",\n            value: \"Male\",\n            checked: form.sex === \"Male\",\n            onChange: e => updateForm({\n              sex: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sexMale\",\n            className: \"form-check-label\",\n            children: \"Male\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check form-check-inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-check-input\",\n            type: \"radio\",\n            name: \"sexFemale\",\n            id: \"sexFemale\",\n            value: \"Female\",\n            checked: form.level === \"Female\",\n            onChange: e => updateForm({\n              sex: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"sexFemale\",\n            className: \"form-check-label\",\n            children: \"Junior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"nW4nASnieZs6QHb6xgq6as8Nvbc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Randomizer_02/randomizer/src/components/create.js"],"names":["React","useState","useNavigate","DatePicker","Create","form","setForm","name","age","sex","contact","doctorsnote","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newPerson","fetch","method","headers","body","JSON","stringify","catch","error","window","alert","target","level"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAIA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC/BM,IAAAA,IAAI,EAAE,EADyB;AAE/BC,IAAAA,GAAG,EAAE,EAF0B;AAG/BC,IAAAA,GAAG,EAAC,EAH2B;AAI/BC,IAAAA,OAAO,EAAE,EAJsB;AAK/BC,IAAAA,WAAW,EAAE;AALkB,GAAD,CAAhC;AAOA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B,CAR+B,CAU/B;;AACA,WAASW,UAAT,CAAoBC,KAApB,EAA2B;AACzB,WAAOR,OAAO,CAAES,IAAD,IAAU;AACvB,aAAO,EAAE,GAAGA,IAAL;AAAW,WAAGD;AAAd,OAAP;AACD,KAFa,CAAd;AAGD,GAf8B,CAiB/B;;;AACA,iBAAeE,QAAf,CAAwBC,CAAxB,EAA2B;AACzBA,IAAAA,CAAC,CAACC,cAAF,GADyB,CAGzB;;AACA,UAAMC,SAAS,GAAG,EAAE,GAAGd;AAAL,KAAlB;AAEA,UAAMe,KAAK,CAAC,kCAAD,EAAqC;AAC9CC,MAAAA,MAAM,EAAE,MADsC;AAE9CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFqC;AAK9CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,SAAf;AALwC,KAArC,CAAL,CAOLO,KAPK,CAOCC,KAAK,IAAI;AACdC,MAAAA,MAAM,CAACC,KAAP,CAAaF,KAAb;AACA;AACD,KAVK,CAAN;AAYArB,IAAAA,OAAO,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,GAAG,EAAE,EAAjB;AAAqBC,MAAAA,GAAG,EAAC,EAAzB;AAA6BC,MAAAA,OAAO,EAAE,EAAtC;AAA0CC,MAAAA,WAAW,EAAC;AAAtD,KAAD,CAAP;AAEAC,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAvC8B,CAyC/B;;;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,QAAQ,EAAEI,QAAhB;AAAA,8BAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,WAAW,EAAC,mBADd;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,SAAS,EAAC,cAHZ;AAIE,UAAA,EAAE,EAAC,MAJL;AAKE,UAAA,KAAK,EAAEX,IAAI,CAACE,IALd;AAME,UAAA,QAAQ,EAAGU,CAAD,IAAOJ,UAAU,CAAC;AAAEN,YAAAA,IAAI,EAAEU,CAAC,CAACa,MAAF,CAAShB;AAAjB,WAAD;AAN7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eA4BE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,SAHP;AAIE,YAAA,EAAE,EAAC,SAJL;AAKE,YAAA,KAAK,EAAC,MALR;AAME,YAAA,OAAO,EAAET,IAAI,CAACI,GAAL,KAAa,MANxB;AAOE,YAAA,QAAQ,EAAGQ,CAAD,IAAOJ,UAAU,CAAC;AAAEJ,cAAAA,GAAG,EAAEQ,CAAC,CAACa,MAAF,CAAShB;AAAhB,aAAD;AAP7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAO,YAAA,OAAO,EAAC,SAAf;AAAyB,YAAA,SAAS,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE;AAAK,UAAA,SAAS,EAAC,8BAAf;AAAA,kCACE;AACE,YAAA,SAAS,EAAC,kBADZ;AAEE,YAAA,IAAI,EAAC,OAFP;AAGE,YAAA,IAAI,EAAC,WAHP;AAIE,YAAA,EAAE,EAAC,WAJL;AAKE,YAAA,KAAK,EAAC,QALR;AAME,YAAA,OAAO,EAAET,IAAI,CAAC0B,KAAL,KAAe,QAN1B;AAOE,YAAA,QAAQ,EAAGd,CAAD,IAAOJ,UAAU,CAAC;AAAEJ,cAAAA,GAAG,EAAEQ,CAAC,CAACa,MAAF,CAAShB;AAAhB,aAAD;AAP7B;AAAA;AAAA;AAAA;AAAA,kBADF,eAUE;AAAO,YAAA,OAAO,EAAC,WAAf;AAA2B,YAAA,SAAS,EAAC,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BF,eAwDE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,KAAK,EAAC,eAFR;AAGE,UAAA,SAAS,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxDF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwED;;GAlHuBV,M;UAQLF,W;;;KARKE,M","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport DatePicker from \"react-datepicker\";\n\n\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    age: \"\",\n    sex:\"\",\n    contact: \"\",\n    doctorsnote: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    })\n    .catch(error => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", age: \"\", sex:\"\", contact: \"\", doctorsnote:\"\" });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Add New Record</h3>\n\n      <form onSubmit={onSubmit}>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            placeholder=\"e.g Ali Bin Ahmad\"\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n{/* \n        <div className=\"form-group\">\n          <label htmlFor=\"dob\">Date of birth</label>\n          <DatePicker selected={startdate} onChange={(date) => setStartDate(date)} />\n          <input\n            type=\"date\"\n            className=\"form-control\"\n            id=\"dob\"\n            value={form.age}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div> */}\n        \n        \n\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"sexMale\"\n              id=\"sexMale\"\n              value=\"Male\"\n              checked={form.sex === \"Male\"}\n              onChange={(e) => updateForm({ sex: e.target.value })}\n            />\n            <label htmlFor=\"sexMale\" className=\"form-check-label\">Male</label>\n          </div>\n\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"sexFemale\"\n              id=\"sexFemale\"\n              value=\"Female\"\n              checked={form.level === \"Female\"}\n              onChange={(e) => updateForm({ sex: e.target.value })}\n            />\n            <label htmlFor=\"sexFemale\" className=\"form-check-label\">Junior</label>\n          </div>      \n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n\n      </form>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}